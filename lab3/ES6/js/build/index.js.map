{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;IAAM,I;AACJ,gBAAY,KAAZ,EAAmB;AAAA;;AACjB,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,OAAL,GAAe,KAAK,aAAL,CAAmB,KAAnB,CAAf;AACD;;;;kCAEa,K,EAAM;AAClB;AACA,UAAI,UAAU,SAAS,aAAT,CAAuB,KAAvB,CAAd;AACA;AACA,cAAQ,SAAR,GAAoB,MAApB;;AAEA;AACA,UAAI,IAAI,SAAS,aAAT,CAAuB,GAAvB,CAAR;AACA;AACA,QAAE,SAAF,GAAc,KAAK,KAAnB;;AAEA;AACA,UAAI,IAAI,SAAS,aAAT,CAAuB,GAAvB,CAAR;AACA;AACA,QAAE,SAAF,GAAc,aAAd;AACA;AACA,QAAE,YAAF,IAAkB,QAAQ,GAA1B;AACA,QAAE,SAAF,GAAc,QAAd;;AAEA;AACA,QAAE,gBAAF,CAAmB,OAAnB,EAA4B,KAAK,MAAL,CAAY,IAAZ,CAAiB,OAAjB,CAA5B;;AAEA;AACA,cAAQ,WAAR,CAAoB,CAApB;AACA,cAAQ,WAAR,CAAoB,CAApB;;AAEA,aAAO,OAAP;AACD;;;0BAEI;AACH;AACA,UAAI,QAAQ,SAAS,aAAT,CAAuB,QAAvB,CAAZ;AACA,YAAM,WAAN,CAAkB,KAAK,OAAvB;AACD;;;oCAEc;AACb;AACA;AACA;AACD;;;6BAEO;AACN;AACA;AACD;;;;;;IAGG,G;AACJ,iBAAc;AAAA;;AACZ,YAAQ,GAAR,CAAY,uBAAZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACD;;;;2CAEsB;AACrB;AACA;AACA;AACD;;;+BAEU,C,EAAE;AACX;;AAEA;AACA;AACA;AACA;AACD;;;4BAEM;AACL;AACD;;;;;;AAIH,IAAI,MAAM,IAAI,GAAJ,EAAV","file":"index.js","sourcesContent":["class Note {\n  constructor(title) {\n    this.title = title;\n    this.element = this.createElement(title);\n  }\n  \n  createElement(title){\n    // create new note\n    let newNote = document.createElement('div');\n    // add class .card\n    newNote.className = \"card\";\n\n    // create title in card\n    let p = document.createElement('p');\n    // give value to p\n    p.innerHTML = this.title;\n\n    // create remove button\n    let a = document.createElement('a');\n    // add class .card-remove\n    p.className = \"card-remove\";\n    // add link\n    p.setAttribute = (\"href\", \"#\");\n    p.innerHTML = \"Remove\";\n\n    // btn remove this card\n    a.addEventListener('click', this.remove.bind(newNote));\n\n    // add title and button to note\n    newNote.appendChild(p);\n    newNote.appendChild(a);\n\n    return newNote;\n  }\n  \n  add(){\n    // this function should append the note to the screen somehow\n    let notes = document.querySelector('.notes');\n    notes.appendChild(this.element);\n  }\n  \n  saveToStorage(){\n    // HINTü§©\n    // localStorage only supports strings, not arrays\n    // if you want to store arrays, look at JSON.parse and JSON.stringify\n  }\n  \n  remove(){\n    // HINTü§© the meaning of 'this' was set by bind() in the createElement function\n    // in this function, 'this' will refer to the current note element\n  } \n}\n\nclass App {\n  constructor() {\n    console.log(\"üëäüèº The Constructor!\");\n  \n    // HINTü§©\n    // clicking the button should work\n    // pressing the enter key should also work\n    // this.btnAdd = ???\n    // this.btnAdd.addEventListener(\"click\", this.createNote.bind(this));\n    // this.loadNotesFromStorage();\n  }\n  \n  loadNotesFromStorage() {\n    // HINTü§©\n    // load all notes from storage here and add them to the screen\n    // something like note.add() in a loop would be nice\n  }\n   \n  createNote(e){\n    // this function should create a new note by using the Note() class\n    \n    // HINTü§©\n    // note.add();\n    // note.saveToStorage();\n    // this.reset();\n  }\n  \n  reset(){\n    // this function should reset the form \n  }\n  \n}\n\nlet app = new App();"]}